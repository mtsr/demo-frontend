# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
image: node:6

variables:
  CONTAINER_TEST_IMAGE: gitlab-registry.kubernetes.knmi.nl/matser/demo-frontend/demo-frontend:$CI_BUILD_REF_NAME
  CONTAINER_RELEASE_IMAGE: gitlab-registry.example.com/my-group/my-project/my-image:latest
  DOCKER_HOST: tcp://localhost:2375
  DOCKER_OPTS: --insecure-registry=gitlab-registry.kubernetes.knmi.nl
  
# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-service
stages:
  - docker_test
  - dependencies
  - build
  - test
  - docker
  - deploy

docker_test:
  stage: docker-test
  image: docker:latest
  services:
    - jonasknmi/dind-options:latest
  before_script:
    - docker info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build -t gitlab-registry.kubernetes.knmi.nl/matser/demo-frontend/image:latest .
    - docker push gitlab-registry.kubernetes.knmi.nl/matser/demo-frontend/image:latest

npm_install:
  stage: dependencies
  cache:
    paths:
      - node_modules/
  script:
    - npm install yarn
    - yarn install
  artifacts:
    paths:
      - node_modules/
    expire_in: 20 minutes

npm_build:
  stage: build
  dependencies:
    - npm_install
  script:
    - npm run build
  artifacts:
    paths:
      - build/
   
run_test:
  stage: test
  dependencies:
    - npm_install
  script:
    - npm test
  coverage: /^All files *\|[^|]*\|[^|]*\|[^|]*\| *(\d+.\d+)|/
  artifacts:
    paths:
      - coverage/

docker_build:
  stage: docker
  image: docker:latest
  services:
    - jonasknmi/dind-options:latest
  dependencies:
    - npm_build
  before_script:
    - docker info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

deploy_staging:
  stage: deploy
  dependencies:
    - npm_build
  script:
    - find build
   
pages:
  stage: deploy
  dependencies:
    - run_test
  script:
    - mv coverage/ public/
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - master
